// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String 
  email String @unique
  password String
  role String @default("STUDENT")
  createdAt DateTime @default(now())
  enrollments Enrollment[]
  review Review[]
  certificate Certificate[]
}

model Course {
  id Int @id @default(autoincrement())
  title String
  description String
  price Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  enrollments Enrollment[]
  review Review[]
  certificate Certificate[]
}

model Enrollment {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  course Course @relation(fields: [courseId], references: [id])
  courseId Int
  enrolledAt DateTime @default(now())
}

//payment model is remaining

model Review {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  course Course @relation(fields: [courseId], references: [id])
  courseId Int
  rating Int
  comment String
  createdAt DateTime @default(now())
}

model Certificate{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  course Course @relation(fields: [courseId], references: [id])
  courseId Int
  cerficateUrl String
  issuedAt DateTime
}